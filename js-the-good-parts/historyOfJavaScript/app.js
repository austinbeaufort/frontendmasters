// HISTORY OF JAVASCRIPT

// MOSAIC

// NETSCAPE NAVIGATOR

// HYPERCARD

// JAVASCRIPT CREATED IN 10 DAYS

// LIVESCRIPT CAME FROM JAVA, SCHEME, AND SELF.

// ORIGINALLY CALLED LIVESCRIPT

// WINDOWS VERSION: JSCRIPT

// ECMAScript


// BAD PARTS COME FROM:
// LEGACY
// GOOD INTENTIONS
// HASTE

// OBJECTS

// OBJECT: A DYNAMIC COLLECTION OF PROPERTIES

// GET, SET, DELETE.

// KEYS MUST BE STRINGS, AUTOMATIC TYPE COERCION.

// OBJECT LITERALS => AN EXPRESSIVE NOTATION FOR CREATING OBJECTS.



// CLASSES VS. PROTOTYPES

// WORKING WITH PROTOTYPES
// MAKE AN OBJECT YOU LIKE.
// CREATE NEW INSTANCES THAT INHERIT FROM THAT OBJECT.
// CUSTOMIZE THE NEW OBJECTS.
// CLASSIFICATION AND TAXONOMY ARE NOT NECESSARY.

// DELEGATION => DIFFERENTIAL INHERITANCE

// Object.create(PROTOTYPE)

// USE OBJECT.CREATE() TO CREATE A NEW INSTANCE OF AN OBJ. WITH A 
// PROTOTYPE LINK.

// OBJECT.CREATE(NULL);


// ALL THE BELOW ARE OBJECTS
/*
NUMBER
BOOLEAN
STRING
ARRAY
DATE
REGULAR EXPRESSIONS (REGEX)
FUNCTION
*/

// ASSOCIATIVE LAW DOES NOT HOLD
// (A + B) + C !== A + (B + C)

// INTEGERS BELOW 9 QUADRILLION ARE OK

// BINARY FLOATING POINT CANNOT REPRESENT DECIMAL FRACTIONS WELL.

// NUMBER METHODS
// toExponential
// toFixed
// toLocaleString
// toPrecision
// toString
// valueOf

// EVERY NUMBER INHERITS FROM NUMBER.PROTOTYPE

// NUMBERS ARE FIRST CLASS OBJECTS

// MATH OBJECT.

// NaN

// isNaN(NaN) // true

// console.log(Number.MAX_VALUE + 1);


// BOOLEANS

// STRINGS

// parseInt()

// CONVERTS VALUE INTO A NUMBER
// STOPS WORKING AT THE FIRST NON-DIGIT CHARACTER.
// THE RADIX (10) SHOULD ALWAYS BE USED. // pass 10, for base 10, as second argument of parseInt()

// STRING.PROTOTYPE

// ARRAYS

// ARRAY INHERITS FROM OBJECT.

// ARRAYS HAVE A SPECIAL LENGTH PROPERTY. IT IS ALWAYS 1 LARGER THAN
// THE HIGHEST INTEGER SUBSCRIPT

// ARRAYS HAVE A .SORT() METHOD.

// USE SPLICE METHOD TO DELETE ELEMENT FROM ARRAY AS TO NOT LEAVE A HOLE IN THE ARRAY.

// DATE

// REGULAR EXPRESSIONS (REGEXP)


// FUNCTION

// ALL VALUES ARE OBJECTS EXCEPT NULL AND UNDEFINED.

// UNDEFINED IS THE DEFAULT VALUE OF VARIABLES AND PARAMETERS

// UNDEFINED IS THE MISSING MEMBERS OF OBJECTS AND ARRAYS.

// CONSOLE.LOG(TYPEOF NULL) // OBJECT

// CONSOLE.LOG(TYPEOF ARRAY) // OBJECT

// console.log(Array.isArray([])); // true

// FALSY VALUES
/*
false
null
undefined
""
0 
NaN

All other values are truthy, including "0" and "false"

*/

// JAVASCRIPT IS A 'LOOSELY TYPED' LANGUAGE

// OBJECTS CAN BE PASSED AS ARGUMENTS TO FUNCTIONS AND CAN BE RETURNED BY FUNCTIONS.

// JAVASCRIPT IS SYNTACTICALLY A MEMBER OF THE 'C' FAMILY

// BITWISE OPERATORS
// &  |  ^  >>  >>>  <<

// CAN THROW ANY VALUE AS AN ERROR

// try {
//     plan_a();
// } catch (ignore) {
//     plan_b();
// }